package user;

import java.awt.EventQueue;

import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;

import controller.catalogo.CatalogoDeProductos;
import controller.producto.Producto;
import user.pantallasProducto.FAgregarStock;
import user.pantallasProducto.FEliminarProducto;
import user.pantallasProducto.FIngresarProducto;
import user.pantallasProducto.FModificarProducto;
import user.pantallasProducto.FPantallaInvalida;

import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import javax.swing.JList;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JButton;
import javax.swing.SwingConstants;
import javax.swing.JTable;

public class FPrimera extends JFrame {

	private JPanel contentPane;
	private CatalogoDeProductos catalogo;
	private JList listProductos;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					FPrimera frame = new FPrimera();
					frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}

	/**
	 * Create the frame.
	 */
	public FPrimera() {
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 829, 570);
		
		JMenuBar menuBar = new JMenuBar();
		setJMenuBar(menuBar);
		
		JMenu mnNewMenu = new JMenu("Productos");
		menuBar.add(mnNewMenu);
		
		JMenuItem mntmNewMenuItem = new JMenuItem("Agregar Producto");
		mntmNewMenuItem.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				agregarProducto();
			}
		});
		mnNewMenu.add(mntmNewMenuItem);
		
		JMenuItem mntmNewMenuItem_1 = new JMenuItem("Eliminar Producto");
		mntmNewMenuItem_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				eliminarProducto();
			}
		});
		mnNewMenu.add(mntmNewMenuItem_1);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("Productos");
		lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
		lblNewLabel.setBounds(20, 34, 287, 25);
		contentPane.add(lblNewLabel);
		
		JList listProductos = new JList();
		listProductos.setBounds(20, 70, 287, 177);
		contentPane.add(listProductos);
		
		this.listProductos = listProductos;
		
		JButton btnNewButton = new JButton("Agregar");
		btnNewButton.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				agregarProducto();
			}
		});
		btnNewButton.setBounds(20, 258, 89, 23);
		contentPane.add(btnNewButton);
		
		JButton btnNewButton_1 = new JButton("Eliminar");
		btnNewButton_1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				eliminarProducto();
			}
		});
		btnNewButton_1.setBounds(119, 258, 89, 23);
		contentPane.add(btnNewButton_1);
		
		JButton btnNewButton_2 = new JButton("Modificar");
		btnNewButton_2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				modificarProducto();
			}
		});
		btnNewButton_2.setBounds(218, 258, 89, 23);
		contentPane.add(btnNewButton_2);
		
		JLabel lblNewLabel_1 = new JLabel("Ventas");
		lblNewLabel_1.setBounds(564, 39, 46, 14);
		contentPane.add(lblNewLabel_1);
		
		JList list = new JList();
		list.setBounds(441, 70, 287, 177);
		contentPane.add(list);
		
		JButton btnNewButton_3 = new JButton("Agregar Stock");
		btnNewButton_3.setBounds(58, 292, 109, 23);
		contentPane.add(btnNewButton_3);
		
		catalogo = new CatalogoDeProductos();
	}
	
	private void agregarProducto() {
		FIngresarProducto ingresarProducto = new FIngresarProducto();
		
		ingresarProducto.setModal(true);
		ingresarProducto.setVisible(true);
		
		Producto producto = ingresarProducto.getProducto();
		if (producto != null) {
			boolean existe = catalogo.cargarProducto(producto);
			if (existe) {
				FPantallaInvalida invalidoEliminar = new FPantallaInvalida("El ID ingresado ya existe...");
				invalidoEliminar.setModal(true);
				invalidoEliminar.setVisible(true);
			}
		}
		
		listProductos.setListData(catalogo.getCatalogoList().toArray());
	}
	
	private void eliminarProducto() {
		FEliminarProducto eliminarProducto = new FEliminarProducto();
		
		eliminarProducto.setModal(true);
		eliminarProducto.setVisible(true);
		
		int id = eliminarProducto.getID();
		
		boolean existe = catalogo.bajaDeProducto(id);
		
		if (existe) {
			listProductos.setListData(catalogo.getCatalogoList().toArray());
		} else {
			FPantallaInvalida invalidoEliminar = new FPantallaInvalida("El ID ingresado no existe...");
			
			invalidoEliminar.setVisible(true);
			invalidoEliminar.setModal(true);
		}
	}
	
	private void modificarProducto() {
		Producto p;
		
		p = (Producto) listProductos.getSelectedValue();
		
		if (p != null) {
			FModificarProducto modificar = new FModificarProducto(p);
			modificar.setVisible(true);
			modificar.setModal(true);
			listProductos.setListData(catalogo.getCatalogoList().toArray());
		}
	}
	
	private void agregarStock() {
		Producto producto;
		producto = (Producto) listProductos.getSelectedValue();
		
		if (producto != null) {
			FAgregarStock agregarStock = new FAgregarStock(producto);
			agregarStock.setVisible(true);
			agregarStock.setModal(true);
			listProductos.setListData(catalogo.getCatalogoList().toArray());
		}
	}
}